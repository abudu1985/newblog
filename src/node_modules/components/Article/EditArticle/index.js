import React, {useState, useEffect, useContext} from 'react'
import {Redirect} from 'react-router-dom'

import ArticleForm from '../ArticleForm'
import {CurrentUserContext} from 'contexts/currentUser'
import firebase from "../../../../firebase";
import withToastProvider from "components/Toaster/withToastProvider";
import useToast from "components/Toaster/useToast";
import {ArticlesDataContext} from "contexts/articlesData";

const EditArticle = ({location, history}) => {
    const [currentUserState] = useContext(CurrentUserContext);
    const [initialValues, setInitialValues] = useState(null)
    const toast = useToast();
    const [articlesData, dispatch] = useContext(ArticlesDataContext);

    const onSubmit = (newArticle) => {
        const {state: {data}} = location;
        const obj = Object.assign({}, data, newArticle);
        const withoutEditedArticle = articlesData.articles.filter(t => t.id !== data.id);
        firebase.updateArticle(obj).then(ref => {
            dispatch({type: 'EDIT_ARTICLE', payload: [...withoutEditedArticle, obj]});
            toast.add('Article was updated!', 'success');
        })
            .catch(error => {
                toast.add(`${error}`, 'danger');
            });
    };

    useEffect(() => {
        if (currentUserState.isLoggedIn === null) {
            return;
        }

        if (currentUserState.isLoggedIn === false) {
            return <Redirect to="/"/>
        }
        const {state: {data}} = location;
        if (!data) {
            history.replace('/')
        }

        setInitialValues({
            title: data.title,
            description: data.description,
            body: data.body,
            tagList: data.tagList.join(' '),
            articlePreview: data.articlePreview ? data.articlePreview : '',
            isPublished: !!data.isPublished,
            id: data.id,
        })
    },[currentUserState, location, history]);

    return (
        <div>
            <ArticleForm
                onSubmit={onSubmit}
                initialValues={initialValues}
            />
        </div>
    )
};

export default withToastProvider(EditArticle);
